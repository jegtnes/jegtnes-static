body {
  margin: 0 auto;

  background: var(--color-brand-secondary);
  color: var(--color-white);
  font-family: var(--font-system-humanist);
  font-size: var(--step-0);
}

.flow > * + *,
.flow > dl > * { 
  margin-block-start: var(--flow-space, 1em)
}

.flow--spacious {
  --flow-space: var(--space-m-l);
}

footer {
  margin-block-start: var(--space-s-m);
  border-block-start: 1px solid black;
  padding-block-start: var(--space-s-m);
  padding-block-end: var(--space-s-m);
}

a {
  /* color: var(--color-blue); */
  text-decoration: underline;
  text-decoration-thickness: 0.1em;
}

a:hover,
a:focus {
  text-decoration-thickness: 0.2em;
  outline: none;
}

a:visited {
  color: var(--color-purple);
}

blockquote {
  border-inline-start: var(--space-2xs) solid var(--color-brand-primary);
  font-size: 1.2em;
  font-style: italic;
  padding: var(--space-2xs) var(--space-s);
}

.flex-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 1rem;
}

.flex-grid--equal > * {
  flex-grow: 1;
  flex-basis: calc((45rem - 100%) * 999);
}

nav ul {
  padding-inline-start: 0;
}

nav ul li {
  display: inline;
  list-style: none;
}

.btn {
  display: inline-block;
  width: fit-content;
  border: var(--space-3xs) solid var(--color-white);
  border-radius: var(--space-xs);
  text-decoration: none;
  padding: var(--space-xs);
  line-height: 1;
}

.btn,
.btn:visited {
  color: var(--color-white);
}

.btn:hover,
.btn:focus {
  background-color: var(--color-white);
  color: var(--color-brand-secondary);
}

.spacing-block-end {
  margin-block-end: var(--space-2xs-xs);
}

:not(pre) > code[class*="language-"] {
  display: inline-block;
  font-size: .8em;  
  padding: 0 .33em;
}

.marius-section {
  display: grid;
  grid-template-columns: subgrid;
}

.marius-section::after {
  content: "";
  grid-column: 1 / -1;
  height: clamp(3.8333rem, 9vmax, 7.67rem);
  background-image: url(/assets/images/pattern-large.svg);
}

.container {
  display: grid;
  grid-template-columns: 1fr 1fr min(60ch, calc(100% - (var(--space-2xs-xs) * 4))) 1fr 1fr;
  gap: var(--space-2xs-xs);

  container-type: inline-size;
}

.container > * {
  grid-column: 3;
}

.container__full-bleed,
.container > pre,
.container > .marius::after {
  grid-column: 1 / -1;
}

@container (min-width: 60ch) {
  .half-bleed {
    grid-column: 2 / -2;
  }
}